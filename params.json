{"name":"Docker-dns","tagline":"Small DNS server for running container on a DOCKER_HOST","body":"partkyle/docker-dns\r\n==========\r\n\r\nDNS server that returns the internal docker ip addresses for running containers. There is no caching and no TTL. It is mainly meant as a development tool.\r\n\r\n# Container Requirements\r\n\r\n\r\n- Connection to a docker server\r\n  - via the DOCKER_HOST https server (requires DOCKER_CERT_HOME and certs available)\r\n  - By mounting the docker socket over /var/run/docker.sock\r\n\r\n# Example Docker Container Run\r\n\r\n```\r\ndocker run --name dns -p 53:53/udp -d -v /var/run/docker.sock:/var/run/docker.sock partkyle/docker-dns\r\n```\r\n\r\n# OSX Tips\r\n\r\nIf you enable routing to your DOCKER_HOST vm, you will be able to access docker IPs locally.\r\n\r\n```\r\n# assuming the docker ip is in the 172.17 range\r\nsudo route -n add 172.17.0.0/16 $(boot2docker ip)\r\n```\r\n\r\nYou can then add an entry to your /etc/resolvers:\r\n\r\n```\r\nsudo mkdir -p /etc/resolvers\r\necho \"nameserver $(boot2docker ip)\" | sudo tee /etc/resolver/docker\r\n```\r\n\r\nYou should now have a file with at `/etc/resolver/docker` with the contents, with your IP of course.\r\n\r\n```\r\nnameserver 192.168.99.102\r\n```\r\n\r\nYou can then run a DNS server on the boot2docker vm, binding to port 53/udp (for DNS) and mounting the docker socket.\r\n\r\n```\r\ndocker run --name dns -p 53:53/udp -d -v /var/run/docker.sock:/var/run/docker.sock partkyle/docker-dns\r\n```\r\n\r\nYou should now be able to resolve dns for anything with a \".docker\" domain.\r\n\r\nExample:\r\n\r\n```\r\n$ docker run -d --name redis redis\r\nb9558812882ccf15119e92c853264ec8d0fb68697d6d4c2a21266f3d7349e0c1\r\n$ ping redis.docker\r\nPING redis.docker (172.17.6.92): 56 data bytes\r\n64 bytes from 172.17.6.92: icmp_seq=0 ttl=63 time=2.337 ms\r\n$ telnet redis.docker 6379\r\nTrying 172.17.6.92...\r\nConnected to redis.docker.\r\nEscape character is '^]'.\r\nping\r\n+PONG\r\n```\r\n\r\n\r\nIt also supports rDNS lookups (though not efficiently at the moment)\r\n\r\n```\r\n$ dig @$(machine ip) -x $(docker inspect -f '{{.NetworkSettings.IPAddress}}' redis)\r\n\r\n; <<>> DiG 9.8.3-P1 <<>> @192.168.99.102 -x 172.17.6.92\r\n; (1 server found)\r\n;; global options: +cmd\r\n;; Got answer:\r\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 43075\r\n;; flags: qr rd; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\r\n;; WARNING: recursion requested but not available\r\n\r\n;; QUESTION SECTION:\r\n;92.6.17.172.in-addr.arpa. IN  PTR\r\n\r\n;; ANSWER SECTION:\r\n92.6.17.172.in-addr.arpa. 0  IN  PTR redis.docker.\r\n\r\n;; Query time: 39 msec\r\n;; SERVER: 192.168.99.102#53(192.168.99.102)\r\n;; WHEN: Thu Apr  2 15:43:10 2015\r\n;; MSG SIZE  rcvd: 94\r\n```\r\n\r\n# Alternative Setup (dnsmasq)\r\n\r\nInstall dnsmasq\r\n\r\n```\r\n# on OSX (follow the instructions to get it to start on boot, etc)\r\nbrew install dnsmasq\r\n```\r\n\r\nAdd these entries to the `/usr/local/etc/dnsmasq.conf` file.\r\n\r\n(I use google DNS, but you can place whatever you want here.)\r\n\r\n```\r\nserver=8.8.8.8\r\nserver=8.8.4.4\r\nserver=/docker/<insert the DOCKER_HOST ip here>\r\n```\r\n\r\nYou can then replace the dns entries in the /etc/resolv.conf to\r\n\r\n```\r\nnameserver 127.0.0.1\r\n```\r\n\r\nNote: On OSX, you may want to change these through the network settings. To do this from the command line:\r\n\r\n```\r\n# list all available network interfaces\r\n$ sudo networksetup listallnetworkservices [2015-04-03 10:33:45]\r\nAn asterisk (*) denotes that a network service is disabled.\r\nBluetooth DUN\r\nDisplay Ethernet\r\nWi-Fi\r\nBluetooth PAN\r\n# select the service(s) you want to override\r\n$ sudo networksetup -setdnsservers \"Wi-Fi\" 127.0.0.1\r\n```\r\n\r\nDns should be configured appropriately, and dnsmasq will forward *.docker domains to your containers.\r\n\r\n```\r\n$ dig redis.docker\r\n\r\n; <<>> DiG 9.8.3-P1 <<>> redis.docker\r\n;; global options: +cmd\r\n;; Got answer:\r\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 10433\r\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\r\n\r\n;; QUESTION SECTION:\r\n;redis.docker.\t\t\tIN\tA\r\n\r\n;; ANSWER SECTION:\r\nredis.docker.\t\t0\tIN\tA\t172.17.7.73\r\n\r\n;; Query time: 13 msec\r\n;; SERVER: 127.0.0.1#53(127.0.0.1)\r\n;; WHEN: Fri Apr  3 10:36:17 2015\r\n;; MSG SIZE  rcvd: 58\r\n\r\n$ dig google.com\r\n\r\n; <<>> DiG 9.8.3-P1 <<>> google.com\r\n;; global options: +cmd\r\n;; Got answer:\r\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 30684\r\n;; flags: qr rd ra; QUERY: 1, ANSWER: 11, AUTHORITY: 0, ADDITIONAL: 0\r\n\r\n;; QUESTION SECTION:\r\n;google.com.\t\t\tIN\tA\r\n\r\n;; ANSWER SECTION:\r\ngoogle.com.\t\t83\tIN\tA\t74.125.224.130\r\ngoogle.com.\t\t83\tIN\tA\t74.125.224.142\r\ngoogle.com.\t\t83\tIN\tA\t74.125.224.137\r\ngoogle.com.\t\t83\tIN\tA\t74.125.224.128\r\ngoogle.com.\t\t83\tIN\tA\t74.125.224.136\r\ngoogle.com.\t\t83\tIN\tA\t74.125.224.133\r\ngoogle.com.\t\t83\tIN\tA\t74.125.224.132\r\ngoogle.com.\t\t83\tIN\tA\t74.125.224.135\r\ngoogle.com.\t\t83\tIN\tA\t74.125.224.129\r\ngoogle.com.\t\t83\tIN\tA\t74.125.224.134\r\ngoogle.com.\t\t83\tIN\tA\t74.125.224.131\r\n\r\n;; Query time: 35 msec\r\n;; SERVER: 127.0.0.1#53(127.0.0.1)\r\n;; WHEN: Fri Apr  3 10:36:33 2015\r\n;; MSG SIZE  rcvd: 204\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}